[
	{
		"color": "red",
		"pattern": "\\b(alignas|alignof|and|and_eq|asm|atomic_cancel|atomic_commit|atomic_noexcept|auto|bitand|bitor|break|case|catch|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|contract_assert|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|for|forv|friend|goto|if|inline|mutable|namespace|new|noexcept|not|not_eq|nullptrv|operator|or|or_eq|override|private|protected|public|reflexpr|register|reinterpret_cast|requires|return|signed|sizeof|static|static_assert|static_cast|struct|switch|synchronized|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|volatile|wchar_t|while|xor|xor_eq)\\b"
	},
	{
		"color": "red",
		"pattern": "#\\b(define|elif|else|endif|error|if|ifdef|ifndef|include|line|pragma|undef|warning)\\b"
	},
	{
		"color": "cyan",
		"pattern": "\\b(bool|char|char16_t|char32_t|char8_t|double|float|int|long|short|void)\\b"
	},
	{
		"color": "cyan",
		"pattern": "\\b(false|true)\\b"
	},
	{
		"color": "green",
		"pattern": "[0-9a-zA-Z_]+(?=\\()"
	},
	{
		"color": "pink",
		"pattern": "0(x|b)[0-9a-zA-Z]+"
	},
	{
		"color": "pink",
		"pattern": "(?<![a-z0-9:])[A-Z][0-9a-zA-Z]+"
	},
	{
		"color": "orange",
		"pattern": "(?<=#include )<(.*)>"
	},
	{
		"color": "orange",
		"pattern": "\\b[A-Z_]+\\b"
	},
	{
		"color": "cyan",
		"pattern": "\\b(nullptr|NULL)\\b"
	},
	{
		"color": "orange",
		"pattern": "\\+|-|\\*|\\/|=|!|&|\\||<|>|:"
	},
	{
		"color": "light gray",
		"pattern": ";"
	},
	{
		"color": "pink",
		"pattern": "\\b[0-9]+\\b"
	},
	{
		"color": "yellow",
		"pattern": "\"([^\"\\\\]|\\\\.)*\"|'.'"
	}
]