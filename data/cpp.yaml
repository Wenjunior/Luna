keywords:
  pattern: \b(override|for|alignas|alignof|and|and_eq|asm|atomic_cancel|atomic_commit|atomic_noexcept|auto|bitand|bitor|break|case|catch|class|compl|concept|const|consteval|constexpr|constinit|const_cast|continue|contract_assert|co_await|co_return|co_yield|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|forv|friend|goto|if|inline|mutable|namespace|new|noexcept|not|not_eq|nullptrv|operator|or|or_eq|private|protected|public|reflexpr|register|reinterpret_cast|requires|return|signed|sizeof|static|static_assert|static_cast|struct|switch|synchronized|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|volatile|wchar_t|while|xor|xor_eq)\b
  color: red
  bold: true

directives:
  pattern: #\b(include|define|undef|elif|else|endif|ifdef|ifndef|if|error|warning|pragma|line)\b
  color: red

primitives:
  pattern: \b(int|float|double|char|bool|short|long|void|char8_t|char16_t|char32_t)\b
  color: cyan

boolenas:
  pattern: \b(true|false)\b
  color: cyan

functions:
  pattern: [0-9a-zA-Z_]+(?=\()
  color: green

integer-literals:
  pattern: 0(x|b)[0-9a-zA-Z]+
  color: pink

classes:
  pattern: (?<![a-z0-9:])[A-Z][0-9a-zA-Z]+
  color: purple

includes:
  pattern: (?<=#include )<(.*)>
  color: orange

macros:
  pattern: \b[A-Z_]+\b
  color: orange

null-values:
  pattern: \b(nullptr|NULL)\b
  color: cyan

operators:
    pattern: \\+|-|\\*|\\/|=|!|&|\\||<|>|:
    color: orange

semicolons:
  pattern: ;
  color: lightgray

numbers:
  pattern: \b[0-9]+\b
  color: pink

strings:
  pattern: \"([^\"\\\\]|\\\\.)*\"|'.'
  color: yellow

single-line-comments:
  pattern: //[^\n]*

multi-line-comments:
  startswith: /\\*
  endswith: \\*/
